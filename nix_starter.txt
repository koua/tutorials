START
Canonical Partner Repository
sudo add-apt-repository "deb http://archive.canonical.com/ $(lsb_release -sc) partner"

DB
from the web

KeePass2
sudo apt-add-repository ppa:jtaylor/keepass
sudo apt-get update
sudo apt-get install keepass2

TrueCrypt
sudo add-apt-repository ppa:michael-astrapi/ppa
sudo apt-get update && sudo apt-get install truecrypt

Chromium
sudo apt-get install chromium-browser

Skype
sudo apt-get install skype

VB
wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
sudo sh -c 'echo "deb http://download.virtualbox.org/virtualbox/debian precise contrib" >> /etc/apt/sources.list'
sudo apt-get update & sudo apt-get install virtualbox 

Optional
Gnom3

sudo add-apt-repository ppa:gnome3-team/gnome3
sudo apt-get update && sudo apt-get install gnome-shell


#NETWORKING - static
sudo vim /etc/network/interfaces 

# The primary network interface
auto eth0
iface eth0 inet static
        address         192.168.1.10
        netmask         255.255.255.0
        broadcast       192.168.1.255
        gateway         192.168.1.1


sudo vim /etc/hosts
192.168.0.111     neko.com    neko

Edit the template’s tail file:
sudo vim /etc/resolvconf/resolv.conf.d/tail

nameserver 208.67.222.222
nameserver 208.67.220.220
nameserver 202.51.5.52

sudo /etc/init.d/resolvconf restart
sudo /etc/init.d/networking restart


SSH
1.
#Check if SSH is runing and on what port
sudo netstat -anp | grep sshd

2.
#remote server
mkdir ~/.ssh
chmod 700 ~/.ssh
cd ~/.ssh/
ssh-keygen -t rsa -b 4071

3.
#2 files will appear(id_rsa.pub and id_rsa). Copy content of id_rsa.pub to authorized_keys file.
cat id_rsa.pub >> authorized_keys
#or 
vim ~/.ssh/id_rsa.pub
vim ~/.ssh/authorized_keys

4.
#Copy id_rsa to your local host.

5.
#Delete private key from the server.
rm id_rsa

Done!

#Alternative
#Keys are generated on local host

1.
#The same 
2.
#The same

3.
#Transfer Client Key (public) to remote host. Private key remains on locan host
cat ~/.ssh/id_dsa.pub | ssh user@remotehost.com «cat >> ~/.
#or
ssh-copy-id [-i [identity_file]] [user@remotehost.com] -p <port_nr>


#For windows:
1.
#Copy everything from id_rsa and paste it in puttygen.exe
vim ~/.ssh/id_rsa
2.
#Convert id_rsa to pytty format.


#Edit ssh configs on a remote server
1.
#Make backup
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.original
#Removes all writing permissions
sudo chmod a-w /etc/ssh/sshd_config.original

2.
#Edit
sudo vim /etc/ssh/sshd_config

Port 22221
RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile          %h/.ssh/authorized_keys
PasswordAuthentication no
PermitRootLogin no
PermitEmptyPasswords no
AllowUsers user
ClientAliveInterval 300
ClientAliveCountMax 0

X11Forwarding   no
LogLevel INFO

ListenAddress 192.168.1.1

ListenAddress 192.168.1.2

HostbasedAuthentication   no


5.
sudo /etc/init.d/ssh restart
or
/etc/init.d/sshd restart
or
sudo servse ssh restart

More security
cp ~/.ssh/id_rsa ~/.ssh/id_rsa.old
openssl pkcs8 -topk8 -v2 des3 -in ~/.ssh/id_rsa.old -out ~/.ssh/id_rsa
chmod 600 ~/.ssh/id_rsa
rm ~/.ssh/id_rsa.old

FOR MAC
ssh -i <KEY> -p <PORT> user@IP

KILL SSH
 
Try killing the responsible sshd process:
user:~> w
9:35PM  up 19 days, 13:31, 2 users, load averages: 0.60, 0.44, 0.43
USER             TTY      FROM              LOGIN@  IDLE WHAT
user            p2       nox               9:33PM     1 -tcsh (tcsh)
user            p3       nox               9:33PM     - w

user:~> ps x | grep sshd
33240  ??  I      0:00.00 sshd: user at ttyp2 (sshd)
33246  ??  S      0:00.01 sshd: user at ttyp3 (sshd)
33264  p3  R+     0:00.00 grep sshd
user:~> kill 33240

#SSH - advanced configuration
1.
#TCP Wrappers Configuration
sudo vim /etc/hosts.allow

ALL: 127.0. [::1] (the 127.0. range is allowed, as well as the localhost ipv6 address)
sshd : 192.168.0.5 (specific IP) 192.168.0. (specific range) EXCEPT 192.168.0.10 (range exceptions)

sudo vim /etc/hosts.deny
Log and deny access (booby traps) - we do not allow connections from crackers.com:
ALL : ALL \
    : spawn (/bin/echo %a from %h attempted to access %d >> \
      /var/log/Access_Deny.log) \
    : deny


RAID+LVM

Status of your RAID drive:
cat /proc/mdstat

Watching the status of a syncing RAID drive:
watch -n1 cat /proc/mdstat

Listing of LVM volumes groups:
sudo vgdisplay
Listing logical volumes:
sudo lvdisplay

Boot from Degraded Disk
sudo vim /etc/initramfs-tools/conf.d/mdadm
(change "BOOT_DEGRADED=false" to "BOOT_DEGRADED=true")


Test your RAID

cat /proc/mdstat
bitmap: 4/466 pages [16KB], 1024KB chunk

sudo mdadm -G /dev/md0 -b internal (turns of Bitmap)

to simulate a fail
mdadm /dev/md0 --fail /dev/sda6


New HDD

The new drive must have an identical (or nearly identical) partition table to the other.
You can use fdisk to manually create a partition table on the new drive identical to the table of the other, or 
If both drives are identical you can use the sfdisk command to duplicate the partition. For example, to copy the partition table from the second drive “sdb” 
onto the first drive “sda”, the sfdisk command is as follows:

sfdisk -d /dev/sdb | sfdisk /dev/sda

mdadm --add /dev/md0 /dev/sda1
mdadm --add /dev/md1 /dev/sda2


tmux attach || tmux new

Dettach
Ctrl+b d 

Create a window
Ctrl+b c

Go to the window
Ctrl+b 0...9 

Copy&Paste
Ctrl+b PgUp
Scroling
PgUp, PgDown
q - quit